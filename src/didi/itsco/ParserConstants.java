/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package didi.itsco;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTERES = 5;
  /** RegularExpression Id. */
  int AZ = 6;
  /** RegularExpression Id. */
  int DESINTERES = 7;
  /** RegularExpression Id. */
  int AZWRITE = 8;
  /** RegularExpression Id. */
  int AZREAD = 9;
  /** RegularExpression Id. */
  int IFE = 10;
  /** RegularExpression Id. */
  int ELFO = 11;
  /** RegularExpression Id. */
  int SBRUJA = 12;
  /** RegularExpression Id. */
  int CASSETTE = 13;
  /** RegularExpression Id. */
  int DANCE = 14;
  /** RegularExpression Id. */
  int NA = 15;
  /** RegularExpression Id. */
  int FORO = 16;
  /** RegularExpression Id. */
  int WHITE = 17;
  /** RegularExpression Id. */
  int DON = 18;
  /** RegularExpression Id. */
  int PROGRAMA = 19;
  /** RegularExpression Id. */
  int SUMA = 20;
  /** RegularExpression Id. */
  int RESTA = 21;
  /** RegularExpression Id. */
  int MULTIPLICACION = 22;
  /** RegularExpression Id. */
  int DIVISION = 23;
  /** RegularExpression Id. */
  int RESIDUO = 24;
  /** RegularExpression Id. */
  int IGUAL = 25;
  /** RegularExpression Id. */
  int MAYOR = 26;
  /** RegularExpression Id. */
  int MENOR = 27;
  /** RegularExpression Id. */
  int AND = 28;
  /** RegularExpression Id. */
  int OR = 29;
  /** RegularExpression Id. */
  int NOT = 30;
  /** RegularExpression Id. */
  int AP = 31;
  /** RegularExpression Id. */
  int CP = 32;
  /** RegularExpression Id. */
  int ALL = 33;
  /** RegularExpression Id. */
  int CLL = 34;
  /** RegularExpression Id. */
  int PC = 35;
  /** RegularExpression Id. */
  int PP = 36;
  /** RegularExpression Id. */
  int digitos = 37;
  /** RegularExpression Id. */
  int letras = 38;
  /** RegularExpression Id. */
  int ID = 39;
  /** RegularExpression Id. */
  int VALOR_ENTERO = 40;
  /** RegularExpression Id. */
  int VALOR_DECIMAL = 41;
  /** RegularExpression Id. */
  int VALOR_CADENA = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"interes\"",
    "\"az\"",
    "\"desinteres\"",
    "\"azwrite\"",
    "\"azread\"",
    "\"ife\"",
    "\"elfo\"",
    "\"sbruja\"",
    "\"cassette\"",
    "\"dance\"",
    "\"na\"",
    "\"foro\"",
    "\"white\"",
    "\"don\"",
    "\"programa\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\":\"",
    "<digitos>",
    "<letras>",
    "<ID>",
    "<VALOR_ENTERO>",
    "<VALOR_DECIMAL>",
    "<VALOR_CADENA>",
  };

}
